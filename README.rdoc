= tm - Command line interface for TaskMapper[http://github.com/hybridgroup/taskmapper]

This application provides an easy to use interface to interact with any TaskMapper 
provider in an standard way.

= Install:

  gem install tm

Also it will be include with TaskMapper so no need to install it alone.

== Use

=== Authentication 

  tm --provider kanbanpad --authentication 'token:kdkdjdkd,username:username' 

Refer to particular providers documentation to know which fields they need for authentication.
After using this mechanism for authentication is better to pass the `initconfig` command to not 
be writing the credentials for each command. This will use the specified provider name as default.

=== Project command

==== List projects

Available options
* --format=pretty|csv|table (Default: pretty)
* --no-color 

This is the default operation on projects. It will list all the projects for a given user. 
(Default: --list=all)

  tm project --list=all --format=table

http://dl.dropbox.com/u/576024/2013-03-27-173542_952x116_scrot.png

  tm project --list=single --search-attribute='name:Project' 

http://dl.dropbox.com/u/576024/2013-03-27-173642_842x113_scrot.png"

=== Task command

==== List tasks

Available options
* --format=pretty|csv|table (Default: pretty)
* --no-color

This is the default operation on tasks. It will list all the tasks for a given project.

Note: For the --project-attribute option you should send an attribute for the project to search, 
ex. 'name:test-project'
(Default --list=all)

    tm task --project-attribute='name:test-project' 

http://dl.dropbox.com/u/576024/2013-04-02-164829_1099x269_scrot.png

    tm task --list=first --project-attribute='name:test-project'

http://dl.dropbox.com/u/576024/2013-04-02-165558_976x133_scrot.png

    tm task --list=last --project-attribute='name:test-project'

http://dl.dropbox.com/u/576024/2013-04-02-165840_1011x124_scrot.png

    tm task --list=single --project-attribute='name:test-project' --task-attribute='title:test-task'

http://dl.dropbox.com/u/576024/2013-04-02-170111_950x124_scrot.png

==== Create task

This particular needs needs --project-attribute and --task-attribute to work on an existing
project and task respectevily.

    tm task --project-attribute='name:test-project' --task-attribute='title:testing' --create-task

http://dl.dropbox.com/u/576024/2013-04-09-102245_1304x162_scrot.png

=== Comment command

==== List comments

Available options 
* --format=pretty|csv|table (Default: pretty)
* --no-color

This is the default operation on comments. It will list all the comments for a given task.

Note: This command is dependant of two other options, --project-attribute and --task-attribute.
The --project-attribute is the same as the task command, it's needed to figure out which project
the command will execute upon, the --task-attribute is needed to figure out on which particular task
the user will retrieve the comments. (ex. 'title:test-task') 

    tm comment --project-attribute='name:test-project' --task-attribute='title:test-task'

http://dl.dropbox.com/u/576024/2013-04-04-143242_1196x148_scrot.png

==== Create comments

This command needs three mandatory options --project-attribute, --task-attribute and --comment-attribute. 

    tm comment --project-attribute='name:test-project --task-attribute='title:test-task' --command-attribute='body:testing' --create-comment

http://dl.dropbox.com/u/576024/2013-04-09-102018_1354x161_scrot.png

For more help 

  tm help
  tm help <command>

